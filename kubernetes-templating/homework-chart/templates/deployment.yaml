apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-homework-deployment
  namespace: {{.Values.namespace}}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: homework
  template:
    metadata:
      labels:
        app: homework

    spec:
#      nodeSelector:
#        homework: "true"
      serviceAccountName: monitoring
      containers:
      - name: nginx
        image: nginx:latest
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8000
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - ls /homework/index.html

        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "rm -f /homework/index.html"]
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        ports:
          - containerPort: 8000
            name: http
        volumeMounts:
          - name: homework
            mountPath: /homework
          - name: nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
      
          - name: configmap-volume
            mountPath: /homework/conf

      
      initContainers:
      - name: init-homework
        image: busybox:1.34.1
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: homework
          mountPath: /homework
        - name: init
          mountPath: /init
          
        command: ['sh', '-c', 'wget -P ./init https://raw.githubusercontent.com/Svetozar95/otus-linux-k8s/main/index.html ; mv init/index.html homework/index.html '] 
      
      
      
      
      
      
      volumes:
        - name: homework
          persistentVolumeClaim:
            claimName: my-pvc

        - name: init
          hostPath:
            path: /init
        - name: configmap-volume
          configMap:
            name: my-configmap
            items:
              - key: "file"
                path: "file"

        - configMap:
            items:
            - key: default.conf
              path: default.conf
            name: nginx-config
          name: nginx-config
  strategy:
    type: {{ .Values.strategy.type }}
    maxUnavailable: {{ .Values.strategy.maxUnavailable }}
    maxSurge: {{ .Values.strategy.maxSurge }}